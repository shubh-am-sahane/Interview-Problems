class Solution
{
    public:
    pair<bool,int>fastSolve(Node* root){
        if(root==NULL){
            pair<bool,int>p = make_pair(true,0);
            return p;
        }
        if(root->left==NULL && root->right==NULL){
            pair<bool,int>p = make_pair(true,root-> data);
            return p;
        }
        pair<bool,int>left = fastSolve(root->left);
        pair<bool,int>right = fastSolve(root->right);
        
        bool condition= root->data == left.second+ right.second;
        
        pair<bool,int>ans;
        if(left.first && right.first && condition){
            ans.first = true;
            ans.second = 2* root->data;
        }
        else{
            ans.first = false;
        }
        return ans;
    }
    
    
    
    
    bool isSumTree(Node* root)
    {
         // Your code here
        return fastSolve(root).first; 
    }
};
